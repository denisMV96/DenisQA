JSON
 4. Создать внешний репозиторий c названием JSON.
На вэб Репозитории --> Создать --> Имя репозитория:JSON --> Установите флажок "Добавить файл README" --> Нажмите "Создать репозиторий"
 5. Клонировать репозиторий JSON на локальный компьютер.
git clone <repository HTTPS>
 6. Внутри локального JSON создать файл “new.json”.
touch new.json
 7. Добавить файл под гит.
git add new.json
 8. Закоммитить файл.
git commit -m "1 commit"
 9. Отправить файл на внешний GitHub репозиторий.
git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json --> ввод информации
 11. Отправить изменения на внешний репозиторий.
git commit -am "1 commit" --> git push
 12. Создать файл preferences.json
touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json --> ввод информации 
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
touch skills.json --> vim skills.json --> ввод информации  
 15. Отправить сразу 2 файла на внешний репозиторий.
git add . --> git commit -m "add 2 json files"
 16. На веб интерфейсе создать файл bug_report.json.
Добавить файл --> Создать новый файл --> Назвать файл
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Зафиксировать новый файл
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Выбрать bug_report.json --> Изменить файл --> ввод информации
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Зафиксировать изменения
 20. Синхронизировать внешний и локальный репозиторий JSON
git pull
XML
 21. Создать внешний репозиторий c названием XML.
На вэб Репозитории --> Создать --> Имя репозитория:XML --> Установите флажок "Добавить файл README" --> Нажмите "Создать репозиторий"
 22. Клонировать репозиторий XML на локальный компьютер.
git clone "https://github.com/denisMV96/XML.git"
 23. Внутри локального XML создать файл “new.xml”.
touch new.xml
 24. Добавить файл под гит.
git add .
 25. Закоммитить файл.
git commit -m "add new file"
 26. Отправить файл на внешний GitHub репозиторий.
git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml --> ввод информации 
 28. Отправить изменения на внешний репозиторий.
git commit -am "add new file" --> git push
 29. Создать файл preferences.xml
touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim preferences.xml --> ввод информации 
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
cat > skills.xml --> ввод информации --> Ctl+C 
 32. Сделать коммит в одну строку.
git add . --> git commit -m "add 2 file"
 33. Отправить сразу 2 файла на внешний репозиторий.
git push
 34. На веб интерфейсе создать файл bug_report.xml.
Добавить файл --> Создать новый файл --> Назвать файл
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Зафиксировать новый файл
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
Выбрать bug_report.xml --> Изменить файл --> ввод информации 
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Зафиксировать изменнеия
 38. Синхронизировать внешний и локальный репозиторий XML
git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
На вэб Репозитории --> Создать --> Имя репозитория:TXT --> Установите флажок "Добавить файл README" --> Нажмите "Создать репозиторий"
 2. Клонировать репозиторий TXT на локальный компьютер.
git clone "https://github.com/denisMV96/TXT.git"
 3. Внутри локального TXT создать файл “new.txt”.
touch new.txt
 4. Добавить файл под гит.
git add new.txt
 5. Закоммитить файл.
git commit -m "new TXT file"
 6. Отправить файл на внешний GitHub репозиторий.
git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
vim new.txt --> ввод информации
 8. Отправить изменения на внешний репозиторий.
git commit -am "new TXT file" --> git push
 9. Создать файл preferences.txt
touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vim preferences.txt --> ввод информации  
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
cat > skills.txt --> ввод информации --> Ctl+C 
 12. Сделать коммит в одну строку.
git add . git commit -m "add 2 TXT file"
 13. Отправить сразу 2 файла на внешний репозиторий.
git push
 14. На веб интерфейсе создать файл bug_report.txt.
Добавить файл --> Создать новый файл --> Назвать файл
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Зафиксировать новый файл
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Выбрать bug_report.txt --> Изменить файл --> ввод информации 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Зафиксировать изменения
 18. Синхронизировать внешний и локальный репозиторий TXT
git pull